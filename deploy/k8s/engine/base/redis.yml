apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: redis
        tier: frontend
    spec:
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
#      restartPolicy: Always
#      affinity:
#        podAntiAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#          - labelSelector:
#              matchExpressions:
#              - key: app
#                operator: In
#                values:
#                - redis-hard
#            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: redis:6.0.6
        name: redis
        command:
          - redis-server
          - "/etc/redis.conf"
        ports:
        - containerPort: 6379
          name: redis-port
        env:
          - name: TZ
            value: Europe/Rome
          - name: MASTER
            value: "true"
#        resources:
#          limits:
#            cpu: "0.1"
        volumeMounts:
#        - mountPath: /redis-master-data
#          name: data
        - name: redis-config
          mountPath: /etc/redis.conf
          subPath: redis.cnf
      volumes:
        - name: redis-config
          configMap:
            name: redis-configmap
#        - name: data
#          emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  type: NodePort
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: redis-port
  selector:
    app: redis