# SPDX-License-Identifier: GPL-3.0-or-later
#
# (C) Copyright 2018-2022 CSI-Piemonte
apiVersion: v1
data:
  API_CATALOG: beehive-internal
  API_ENV: mylab
  API_FERNET_KEY: xxxkey
  API_LOG: /tmp/
  # API_OAUTH2_CLIENT = UUID : SECRET
  API_OAUTH2_CLIENT: 0d1e4043-751e-4bc7-95d8-e95dd1202367:RD79QYeC5eIgyihrjCGzUm66JypTBXklxOnN9rNj
  API_PREFIX: ""
  API_TIMEOUT: "60"
  CELERY_BROKER_URI: amqp://beehive:xxx$(RABBITMQ_SERVICE_HOST):5672/nivola
  ELASTIC_NODES: dev-beehive-07.tstsddc.csi.it
  GEVENT_NUMBER: "200"
  LOGGING_LEVEL: "10"
  MAIL_SENDER: xxx@csi.it
  MAIL_SERVER: xxx.csi.it
  #MYSQL_URI: mysql+pymysql://ssh:ssh@<HOST_DB>:3306/ssh
  MYSQL_URI: mysql+pymysql://ssh:ssh@192.168.49.100:3306/ssh
  #OAUTH2_ENDPOINT: https://<MINIKUBE_IP>:443 
  OAUTH2_ENDPOINT: https://192.168.49.4:443
  PYTHONBASEPATH: /usr/local/lib/python3.7/site-packages
  REDIS_IDENTITY_URI: redis://:ppp@$(REDIS_SERVICE_HOST):6379/0
  REDIS_QUEUE_URI: redis://:ppp@$(REDIS_SERVICE_HOST):6379/0
  REDIS_URI: redis://:ppp@$(REDIS_SERVICE_HOST):6379/0
  TASK_EXPIRE: "86400"
  TASK_TIME_LIMIT: "1200"
kind: ConfigMap
metadata:
  labels:
    environment: mylab
  name: env-config-hm2kf9cb9t
  namespace: beehive-mylab
---
apiVersion: v1
data:
  uwsgi-ssh.yml: |
    # SPDX-License-Identifier: GPL-3.0-or-later
    #
    # (C) Copyright 2018-2022 CSI-Piemonte

    uwsgi:
        api_id: ssh
        api_name: beehive
        api_subsystem: ssh
        api_package: beehive
        api_env: $(API_ENV)
        api_prefix: $(API_PREFIX)
        api_fernet_key: $(API_FERNET_KEY)
        api_host: $(API_POD_IP)
        api_fqdn: $(API_POD_IP)
        api_catalog: $(API_CATALOG)
        api_endpoint: $(API_ENDPOINT)
        api_oauth2_client: $(API_OAUTH2_CLIENT)
        api_cluster_ip: $(API_CLUSTER_IP)
        api_timeout: $(API_TIMEOUT)
        api_log: $(API_LOG)
        api_swagger_spec_path: /usr/local/uwsgi/pkgs/beehive/beehive/server/swagger.yml
        api_logging_level: $(LOGGING_LEVEL)

        # socket configuration uwsgi, http
        socket: :8072
        http-socket: :8082

        # startup user
        uid: uwsgi
        gid: uwsgi

        #per lunghe querystring default 4096 max 65535
        buffer-size: 8192


        # daemon configuration
        #daemonize: /tmp/ssh-01.api.out
        #pidfile: /tmp/ssh-01.pid
        #vacuum: true

        # python configuration
        #virtualenv: %d../../
        plugins: python3,gevent_python3
        py-programname: python3

        # process configuration
        # master: true
        enable-threads: true
        # workers: 1
        gevent: $(GEVENT_NUMBER)
        gevent-monkey-patch: true
        #procname: ssh
        # cpu-affinity: 1

        # queue configuration
        #queue: 10
        #queue-blocksize: 64000

        #cache2: name=portal_cache,items=100

        # app configuration
        module: beehive.server.api:app

        oauth2_endpoint: $(OAUTH2_ENDPOINT)

        # database uri
        database_uri: $(MYSQL_URI)

        # redis uri
        redis_identity_uri: $(REDIS_IDENTITY_URI)
        redis_uri: $(REDIS_URI)
        redis_queue_uri: $(REDIS_QUEUE_URI)
        redis_celery_uri: $(REDIS_QUEUE_URI)

        # elasticsearch nodes
        elasticsearch_nodes: $(ELASTIC_NODES)

        # sendmail
        sendmail_server: $(MAIL_SERVER)
        sendmail_sender: $(MAIL_SENDER)

        # task manager / scheduler
        # broker_url: $(REDIS_QUEUE_URI)
        broker_url: $(CELERY_BROKER_URI)
        broker_queue: celery.ssh.$(API_ENV)
        broker_queue_event: celery.event.$(API_ENV)
        broker_queue_catalog: celery.catalog.$(API_ENV)
        result_backend: $(REDIS_QUEUE_URI)
        expire: $(TASK_EXPIRE)
        task_time_limit: $(TASK_TIME_LIMIT)

        # awx connection
    #    awx_uri =
    #    awx_user =
    #    awx_password =
    #    awx_organization =
    #    awx_org_id =

        # task modules
        task_module: 0

        # api modules
        api_module: 3
        api_module.1: beehive.module.basic.mod.BasicModule
        api_module.2: beehive_ssh.mod.SshModule,true
        api_module.3: beehive.module.scheduler_v2.mod.SchedulerModuleV2

        # api plugins
        # api_plugin: 0

        # event handler
        # event_handler: 0
kind: ConfigMap
metadata:
  labels:
    environment: mylab
  name: ssh-config-khf2ckmdk8
  namespace: beehive-mylab
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    environment: mylab
    name: ssh
    role: uwsgi
  name: uwsgi-ssh-app
  namespace: beehive-mylab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uwsgi-ssh-pod
      environment: mylab
  template:
    metadata:
      labels:
        app: uwsgi-ssh-pod
        environment: mylab
    spec:
      containers:
      - command:
        - uwsgi
        - --yaml
        - /etc/uwsgi/uwsgi.yaml
        env:
        - name: TZ
          value: Europe/Rome
        - name: API_CLUSTER_IP
          value: $(UWSGI_SSH_CLUSTERIP_SERVICE_HOST)
        - name: API_ENDPOINT
          value: http://$(UWSGI_AUTH_CLUSTERIP_SERVICE_HOST):8080
        - name: API_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        envFrom:
        - configMapRef:
            name: env-config-hm2kf9cb9t
        image: nivola/cmp
        #imagePullPolicy: Always
        imagePullPolicy: Never
        name: uwsgi-ssh
        ports:
        - containerPort: 8082
        volumeMounts:
        - mountPath: /tmp
          name: uwsgi-tmp-volume
        - mountPath: /usr/local/uwsgi/pkgs
          name: uwsgi-beehive-volume
        - mountPath: /etc/uwsgi/uwsgi.yaml
          name: uwsgi-config
          subPath: uwsgi-ssh.yml
      volumes:
      - name: uwsgi-tmp-volume
        persistentVolumeClaim:
          claimName: tmp-volume-claim
      - name: uwsgi-beehive-volume
        persistentVolumeClaim:
          claimName: beehive-volume-claim
      - configMap:
          name: ssh-config-khf2ckmdk8
        name: uwsgi-config
